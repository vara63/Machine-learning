import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
data = pd.DataFrame({
    'Brand': ['Toyota', 'Honda', 'BMW', 'Ford', 'Audi', 'Toyota', 'BMW', 'Ford'],
    'Year': [2015, 2017, 2016, 2013, 2018, 2014, 2015, 2016],
    'Kms_Driven': [50000, 30000, 40000, 60000, 25000, 52000, 41000, 58000],
    'Fuel_Type': ['Petrol', 'Diesel', 'Diesel', 'Petrol', 'Diesel', 'Petrol', 'Diesel', 'Petrol'],
    'Price': [500000, 550000, 800000, 450000, 1000000, 480000, 820000, 470000]
})
data_encoded = pd.get_dummies(data, columns=['Brand', 'Fuel_Type'], drop_first=True)
X = data_encoded.drop('Price', axis=1)
y = data_encoded['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)
print("Root Mean Squared Error (RMSE):", round(rmse, 2))
print("R² Score:", round(r2, 4))
new_car = pd.DataFrame({
    'Year': [2017],
    'Kms_Driven': [30000],
    'Brand_BMW': [0],
    'Brand_Ford': [0],
    'Brand_Honda': [1],
    'Brand_Toyota': [0],
    'Fuel_Type_Petrol': [0]
})
predicted_price = model.predict(new_car)
print("\nPredicted price for new car:", round(predicted_price[0], 2))

output:
Root Mean Squared Error (RMSE): 31547.24
R² Score: 0.9911

Predicted price for new car: 562113.94
